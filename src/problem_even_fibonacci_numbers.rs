// Even Fibonacci numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

use crate::lib::sequence::Fibonacci;

#[allow(dead_code)]
pub fn run(limit: u32) -> u32 {
    Fibonacci::new()
        .take_while(|&x| x <= limit)
        .filter(|&x| x % 2 == 0)
        .sum()
}

#[test]
fn test() {
    assert_eq!(4613732, run(4_000_000));
}
