//! The sequence of triangle numbers is generated by adding the natural numbers.
//! So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
//! The first ten terms would be:
//!
//! 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//!
//! [...] We can see that 28 is the first triangle number to have over five divisors.
//!
//! What is the value of the first triangle number to have over five hundred divisors?

extern crate factors;
extern crate triangular_number;

use factors::Factorable;
use triangular_number::TriangularNumber;

fn main() {
    println!("{}", solve(500));
}

/// The first triangular with number with more than `n` factors
fn solve(n: usize) -> u64 {
    TriangularNumber::new()
        .find(|&num| Factorable::new(num).num_factors() > n)
        .unwrap()
}

#[cfg(test)]
mod p012 {
    use super::solve;

    #[test]
    fn over_five_divisors() {
        assert_eq!(28, solve(5));
    }

    #[test]
    fn over_five_hundred_divisors() {
        assert_eq!(76576500, solve(500));
    }
}
