// Even Fibonacci numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

struct Fibonacci {
    n1: u32,
    n2: u32,
}

impl Fibonacci {
    fn new () -> Fibonacci {
        Fibonacci { n1: 0, n2: 1 }
    }
}

impl Iterator for Fibonacci {
    type Item = u32;
    fn next (&mut self) -> Option<u32> {
        let new_value = self.n1 + self.n2;
        self.n1 = self.n2;
        self.n2 = new_value;
        Some(new_value)
    }
}


fn main () {
    let sum = Fibonacci::new()
        .take_while(|&x| x <= 4_000_000)
        .filter(|&x| x % 2 == 0)
        .sum::<u32>();
    println!("{}", sum);
}
